#compdef cpout
# _cpout â€” zsh completion for cpout, using the plugin's CP_FLAG_SPEC

# Source the plugin file if the spec isn't in scope (OMZ normally sources it)
(( ${+CP_FLAG_SPEC} )) || return 0

# Build _arguments spec from CP_FLAG_SPEC
_cpout_build_argspec() {
  local s short long req desc
  local -a spec=()
  for s in "${CP_FLAG_SPEC[@]}"; do
    short="${s%%|*}"; s="${s#*|}"
    long="${s%%|*}";  s="${s#*|}"
    req="${s%%|*}";   s="${s#*|}"
    desc="$s"

    local optdef=""
    # short
    [[ "$short" != "-" ]] && optdef+="-$short"
    # arg?
    if [[ "$req" = "arg" ]]; then
      # attach argument meta
      case "$short" in
        M) optdef+="[${desc}]:language:(bash zsh sh fish python node js ts json yaml cue)" ;;
        t) optdef+="[${desc}]:lines: " ;;
        *) optdef+="[${desc}]:arg: " ;;
      esac
    else
      optdef+="[${desc}]"
    fi
    spec+=("$optdef")
  done

  # trailing positionals: suggest command names
  spec+=('*::command:->cmd')
  print -l -- "${spec[@]}"
}

_cpout() {
  local -a argspec
  argspec=("$(_cpout_build_argspec)")
  _arguments -s -S $argspec && return

  case $state in
    (cmd) _command_names -e ;;
  esac
}
