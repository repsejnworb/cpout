name: Build release assets

on:
  workflow_run:
    workflows: ["release-please"]
    types: [completed]

permissions:
  contents: write

jobs:
  build-and-upload:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with:
          go-version: '1.22.x'
          cache: true

      - name: Resolve latest release tag
        id: rel
        shell: bash
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -euo pipefail
          # Get the most recent published release (the one release-please just made)
          TAG="$(gh api repos/${{ github.repository }}/releases/latest --jq .tag_name)"
          echo "tag=$TAG" >> "$GITHUB_OUTPUT"
          echo "version=${TAG#v}" >> "$GITHUB_OUTPUT"

      - name: Build (macOS + Linux)
        run: |
          set -euo pipefail
          ver="${{ steps.rel.outputs.version }}"
          mkdir -p dist

          # macOS arm64
          GOOS=darwin GOARCH=arm64 go build -ldflags="-s -w -X main.version=${ver}" -o dist/cpout ./cmd/cpout
          tar -C dist -czf "dist/cpout_darwin_arm64.tar.gz" cpout
          rm dist/cpout

          # macOS amd64
          GOOS=darwin GOARCH=amd64 go build -ldflags="-s -w -X main.version=${ver}" -o dist/cpout ./cmd/cpout
          tar -C dist -czf "dist/cpout_darwin_amd64.tar.gz" cpout
          rm dist/cpout

          # Linux arm64
          GOOS=linux GOARCH=arm64 go build -ldflags="-s -w -X main.version=${ver}" -o dist/cpout ./cmd/cpout
          tar -C dist -czf "dist/cpout_linux_arm64.tar.gz" cpout
          rm dist/cpout

          # Linux amd64
          GOOS=linux GOARCH=amd64 go build -ldflags="-s -w -X main.version=${ver}" -o dist/cpout ./cmd/cpout
          tar -C dist -czf "dist/cpout_linux_amd64.tar.gz" cpout
          rm dist/cpout

      - name: Upload assets to the release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.rel.outputs.tag }}
          files: |
            dist/cpout_*.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
